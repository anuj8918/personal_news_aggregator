{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\OneDrive\\\\Desktop\\\\news\\\\news-aggregator\\\\src\\\\components\\\\NewsAggregator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport axios from \"axios\";\n\n// Define types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Fetch News Function\nconst fetchNews = async ({\n  queryKey\n}) => {\n  const [, category, searchTerm, currentPage] = queryKey;\n  const BACKEND_URL = process.env.NODE_ENV === \"development\" ? \"http://localhost:5001\" : process.env.REACT_APP_BACKEND_URL;\n  const url = searchTerm ? `${BACKEND_URL}/api/news?search=${searchTerm}&page=${currentPage}` : `${BACKEND_URL}/api/news?category=${category}&page=${currentPage}`;\n  const response = await axios.get(url);\n  return response.data.articles || [];\n};\nconst NewsAggregator = () => {\n  _s();\n  const [category, setCategory] = useState(\"technology\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showSearchInput, setShowSearchInput] = useState(false);\n  const {\n    data: news = [],\n    isLoading: loading,\n    error\n  } = useQuery({\n    queryKey: [\"news\", category, searchTerm, currentPage],\n    queryFn: fetchNews,\n    staleTime: 5 * 60 * 1000,\n    refetchOnWindowFocus: false\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#4b5563\"\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#4b5563\"\n      },\n      children: \"Loading news...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: news.map((article, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: article.source.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: article.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: article.isFake ? \"red\" : \"green\",\n            fontWeight: \"bold\"\n          },\n          children: article.isFake ? \"⚠️ Fake News\" : \"✅ Real News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: article.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Read more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(NewsAggregator, \"a5r7+nPJrlJkjif68IsUk4ZIjMg=\", false, function () {\n  return [useQuery];\n});\n_c = NewsAggregator;\nexport default NewsAggregator;\nvar _c;\n$RefreshReg$(_c, \"NewsAggregator\");","map":{"version":3,"names":["React","useState","useQuery","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchNews","queryKey","category","searchTerm","currentPage","BACKEND_URL","process","env","NODE_ENV","REACT_APP_BACKEND_URL","url","response","get","data","articles","NewsAggregator","_s","setCategory","setSearchTerm","setCurrentPage","showSearchInput","setShowSearchInput","news","isLoading","loading","error","queryFn","staleTime","refetchOnWindowFocus","children","style","textAlign","color","message","fileName","_jsxFileName","lineNumber","columnNumber","map","article","index","title","source","name","description","isFake","fontWeight","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/PC/OneDrive/Desktop/news/news-aggregator/src/components/NewsAggregator.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { FaNewspaper, FaSearch } from \"react-icons/fa\";\r\n\r\n// Define types\r\ntype Article = {\r\n  title: string;\r\n  description: string;\r\n  url: string;\r\n  urlToImage?: string;\r\n  source: { name: string };\r\n  isFake?: boolean;\r\n};\r\n\r\n// Fetch News Function\r\nconst fetchNews = async ({\r\n  queryKey,\r\n}: {\r\n  queryKey: [string, string, string, number];\r\n}) => {\r\n  const [, category, searchTerm, currentPage] = queryKey;\r\n  const BACKEND_URL =\r\n    process.env.NODE_ENV === \"development\"\r\n      ? \"http://localhost:5001\"\r\n      : process.env.REACT_APP_BACKEND_URL;\r\n\r\n  const url = searchTerm\r\n    ? `${BACKEND_URL}/api/news?search=${searchTerm}&page=${currentPage}`\r\n    : `${BACKEND_URL}/api/news?category=${category}&page=${currentPage}`;\r\n\r\n  const response = await axios.get(url);\r\n  return response.data.articles || [];\r\n};\r\n\r\nconst NewsAggregator: React.FC = () => {\r\n  const [category, setCategory] = useState(\"technology\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showSearchInput, setShowSearchInput] = useState(false);\r\n\r\n  const { data: news = [], isLoading: loading, error } = useQuery({\r\n    queryKey: [\"news\", category, searchTerm, currentPage],\r\n    queryFn: fetchNews,\r\n    staleTime: 5 * 60 * 1000,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <p style={{ textAlign: \"center\", color: \"#4b5563\" }}>{error.message}</p>\r\n      ) : loading ? (\r\n        <p style={{ textAlign: \"center\", color: \"#4b5563\" }}>Loading news...</p>\r\n      ) : (\r\n        <>\r\n          {news.map((article: Article, index: number) => (\r\n            <div key={index}>\r\n              <h2>{article.title}</h2>\r\n              <p>{article.source.name}</p>\r\n              <p>{article.description}</p>\r\n              <p style={{ color: article.isFake ? \"red\" : \"green\", fontWeight: \"bold\" }}>\r\n                {article.isFake ? \"⚠️ Fake News\" : \"✅ Real News\"}\r\n              </p>\r\n              <a href={article.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Read more\r\n              </a>\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsAggregator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}